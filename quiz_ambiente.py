# app.py
# Quiz Ambiental ‚Äî Vers√£o Pro (Streamlit)
# (apenas a escala foi atualizada para ‚ÄúNunca fa√ßo isso ‚Üí Sempre‚Äù)

import streamlit as st
import time
import random
import math
import json
from datetime import datetime

st.set_page_config(
    page_title="Quiz Ambiental ‚Äî Guardi√µes da Terra",
    page_icon="üåø",
    layout="wide",
    initial_sidebar_state="expanded"
)

QUESTOES = [
    {"q": "Evito jogar lixo em locais inadequados.",
     "hint": "Descartar corretamente evita entupimentos, polui√ß√£o dos rios e preju√≠zo √† fauna.",
     "fact": "O lixo que vai para rios costuma terminar no oceano ‚Äî evitar descarte impr√≥prio protege ecossistemas costeiros."},
    {"q": "Separo materiais recicl√°veis em casa.",
     "hint": "Separar facilita a reciclagem e reduz a extra√ß√£o de recursos naturais.",
     "fact": "Reciclar papel evita derrubada de √°rvores ‚Äî uma tonelada de papel reciclado salva cerca de 17 √°rvores."},
    {"q": "Procuro reduzir o uso de pl√°stico descart√°vel.",
     "hint": "Pl√°sticos descart√°veis levam d√©cadas ou s√©culos para se decompor.",
     "fact": "As microfibras pl√°sticas j√° foram encontradas at√© em √°guas pot√°veis e peixes consumidos por humanos."},
    {"q": "Economizo √°gua nas tarefas do dia a dia.",
     "hint": "Reduzir o tempo no banho e consertar vazamentos economiza milhares de litros por ano.",
     "fact": "Um vazamento pequeno pode desperdi√ßar mais de 200 litros por dia ‚Äî conserte sempre que notar."},
    {"q": "Desligo luzes e aparelhos que n√£o est√£o sendo usados.",
     "hint": "Desligar economiza energia e reduz emiss√µes associadas √† gera√ß√£o el√©trica.",
     "fact": "Desligar um aparelho da tomada evita consumo fantasma ‚Äî equipamentos em standby ainda gastam eletricidade."},
    {"q": "Participo ou apoio a√ß√µes de preserva√ß√£o ambiental.",
     "hint": "A a√ß√£o coletiva gera mudan√ßas significativas em pol√≠ticas e comportamento.",
     "fact": "Pequenas a√ß√µes locais, como mutir√µes de limpeza, podem restaurar habitats e aumentar a biodiversidade local."},
    {"q": "Levo em conta o impacto ambiental ao comprar produtos.",
     "hint": "Escolher produtos com menos embalagem e maior durabilidade reduz res√≠duos.",
     "fact": "Produtos com certifica√ß√µes sustent√°veis normalmente utilizam menos recursos de produ√ß√£o."},
    {"q": "Acredito que atitudes individuais ajudam o planeta.",
     "hint": "Atitudes somadas transformam mercados e pol√≠ticas p√∫blicas.",
     "fact": "Campanhas de consumo consciente j√° mudaram pr√°ticas de empresas e reduziram embalagens."},
    {"q": "Procuro aprender mais sobre meio ambiente e biodiversidade.",
     "hint": "Conhecimento inspira a√ß√£o e escolhas melhores no dia a dia.",
     "fact": "Comunidades educadas costumam alcan√ßar melhores resultados em conserva√ß√£o e uso sustent√°vel."},
    {"q": "Acho importante cobrar pol√≠ticas p√∫blicas ambientais.",
     "hint": "Cobran√ßa e participa√ß√£o influenciam legisla√ß√µes e fiscaliza√ß√µes.",
     "fact": "A press√£o popular j√° foi decisiva para cria√ß√£o de √°reas protegidas em muitos pa√≠ses."},
    {"q": "Uso transporte p√∫blico ou bicicleta para reduzir emiss√µes.",
     "hint": "Menos carros = menos emiss√µes e menos congestionamento.",
     "fact": "Trocar trajetos curtos de carro por bicicleta reduz significativamente sua pegada de carbono anual."},
    {"q": "Planto √°rvores ou cuido de plantas em casa.",
     "hint": "Plantas ajudam a regular temperatura e limpar o ar localmente.",
     "fact": "√Årvores maduras capturam toneladas de CO2 ao longo de d√©cadas e melhoram ecossistemas urbanos."},
    {"q": "Evito o desperd√≠cio de alimentos no meu dia a dia.",
     "hint": "Planejar refei√ß√µes e armazenar corretamente reduz desperd√≠cio e emiss√µes.",
     "fact": "Um ter√ßo do alimento produzido no mundo √© desperdi√ßado ‚Äî reduzir desperd√≠cio ajuda recursos e clima."}
]

# (CSS, JS, utilit√°rios e fun√ß√µes mantidos 100% iguais ‚Äî sem mudan√ßas)

# --- (pulei at√© a parte onde aparecem as instru√ß√µes e o slider) ---

# BOT√ïES INICIAIS
if not st.session_state['iniciado'] and not st.session_state['finished']:
    col1, col2, col3 = st.columns([1,1,1])
    with col1:
        if st.button("Iniciar quiz üå±"):
            iniciar_quiz(st.session_state['dificuldade'])
            st.rerun()
    with col2:
        if st.button("Ver instru√ß√µes ‚ìò"):
            st.info(
                "Responda cada pergunta em escala de 1Ô∏è‚É£ (nunca fa√ßo isso) a 5Ô∏è‚É£ (sempre). "
                "Ao salvar, voc√™ ver√° feedback animado e uma dica relacionada."
            )
    with col3:
        if st.button("Exibir perguntas (modo r√°pido)"):
            st.session_state['modo_rapido'] = True

# --- MODO R√ÅPIDO (todas perguntas) ---
if st.session_state.get('modo_rapido'):
    st.markdown('<div class="main-card">', unsafe_allow_html=True)
    st.subheader("Modo R√°pido: responda todas as perguntas")
    respostas_fast = []
    for i, quest in enumerate(QUESTOES, start=1):
        st.markdown(f"**{i}. {quest['q']}**")
        val = st.slider(
            "Selecione:",
            1, 5, 3,
            key=f'fast_{i}',
            help='1Ô∏è‚É£ Nunca fa√ßo isso ... 5Ô∏è‚É£ Sempre'
        )
        st.markdown(f"<div class='small-muted'>Dica: {quest['hint']}</div>", unsafe_allow_html=True)
        st.markdown(f"<div class='small-muted'>Fun Fact: {quest['fact']}</div>", unsafe_allow_html=True)
        respostas_fast.append(val)

# --- QUIZ (uma pergunta por vez) ---
if st.session_state['iniciado'] and not st.session_state['finished']:
    idx = st.session_state['cur_idx']
    perguntas_idx = st.session_state['perguntas_idx']
    qidx = perguntas_idx[idx]
    pergunta = QUESTOES[qidx]
    container = st.empty()
    with container.container():
        st.markdown('<div class="main-card">', unsafe_allow_html=True)
        progresso_pct = int(((idx) / len(QUESTOES)) * 100)
        st.markdown(
            f"<div style='display:flex;justify-content:space-between;align-items:center'>"
            f"<div><h2>Pergunta {idx+1} de {len(QUESTOES)}</h2></div>"
            f"<div style='width:45%'><div class='progress-track'>"
            f"<div class='progress-fill' style='width:{progresso_pct}%'></div>"
            f"</div></div></div>",
            unsafe_allow_html=True
        )
        st.markdown(f"<div class='question-card'><b>{pergunta['q']}</b></div>", unsafe_allow_html=True)

        col_main_q, col_side_q = st.columns([3,1])
        with col_main_q:
            resposta = st.slider(
                "Escolha sua resposta:",
                1, 5, 3,
                key=f'q_{idx}',
                help='1Ô∏è‚É£ Nunca fa√ßo isso ... 5Ô∏è‚É£ Sempre'
            )
            st.markdown(f"<div class='small-muted'>Dica: {pergunta['hint']}</div>", unsafe_allow_html=True)
            st.markdown(f"<div class='small-muted'>Fun Fact: {pergunta['fact']}</div>", unsafe_allow_html=True)
